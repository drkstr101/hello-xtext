grammar drkstr.hello.xtext.natural.core.Natural hidden(WS)
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate natural "http://www.agileware.org/natural/core"

// ----------------------------------------------------------
//
// Scenario Model
//
// ----------------------------------------------------------

Model: {Model}
	('\r'? '\n')*
	scenarios+=Scenario*
;
	
Scenario: {Scenario}
	'Scenario:' title=Text? EOL
	steps+=Step*
;


// --------------------------------------
// Step
// --------------------------------------

Step:
	keyword=STEP_KEYWORD
	description=StepDescription EOL
	(table=Table | document=DocString)?
;

STEP_KEYWORD: ANY_KEYWORD
	| GIVEN_KEYWORD
	| WHEN_KEYWORD
	| THEN_KEYWORD
	| AND_KEYWORD
	| BUT_KEYWORD
;

terminal ANY_KEYWORD: '*';
terminal GIVEN_KEYWORD: 'Given';
terminal WHEN_KEYWORD: 'When';
terminal THEN_KEYWORD: 'Then';
terminal AND_KEYWORD: 'And';
terminal BUT_KEYWORD: 'But';

// --------------------------------------
// StepDescription
// --------------------------------------

StepDescription returns ecore::EString:
 	DESCRIPTION_LITERAL+
;

DESCRIPTION_LITERAL: PLACEHOLDER
	| NUMBER
	| STRING
	| WORD
	| PUNCTUATION
	| ANY_OTHER
;

terminal PLACEHOLDER:
	('<' WORD '>')
	| ('[' WORD ']')
;

// --------------------------------------
// Table
// --------------------------------------

Table:
	rows+=TableRow+
;

TableRow:
	cols+=TableCol+ '|' EOL
;

TableCol:
	cell=TABLE_CELL
;

terminal TABLE_CELL: '|' !('|' | '\n' | '\r')*;

// --------------------------------------
// DocString
// --------------------------------------

DocString: {DocString}
	(('"""' EOL (text=Text EOL)? '"""')
		| ("'''" EOL (text=Text EOL)? "'''"))
	EOL
;


// ----------------------------------------------------------
//
// Text Model
//
// ----------------------------------------------------------

Text returns ecore::EString:
 	TEXT_LITERAL+ (EOL TEXT_LITERAL+)*
;

TEXT_LITERAL: WORD
	| PUNCTUATION
	| ANY_OTHER
;

terminal WORD: 
	(LETTER | DIGIT)
	(LETTER | DIGIT | '_' | '-' | '.' )*
;

terminal NUMBER returns ecore::EDouble:
    '-'? ('0'..'9')+ ('.' ('0'..'9')+)?
;
 
terminal STRING returns ecore::EString:
    '"' ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' 
	    | "'" ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'"
;

terminal PUNCTUATION: ASCII_SYMBOLS 
	| '...'
;

terminal EOL: ('\r'? '\n')+ | EOF;

terminal WS: (SPACE | '\t');

terminal ANY_OTHER: .;



// ----------------------------------------------------------
//
// Unicode Ranges
//
// ----------------------------------------------------------

terminal fragment SPACE: ASCII_SPACE;

terminal fragment DIGIT: ASCII_DIGIT;

terminal fragment LETTER: LATIN_ALPHABET;

// Basic Latin
////

terminal fragment ASCII_SPACE: '\u0020';

terminal fragment ASCII_DIGIT: ('\u0030'..'\u0039');

// all ascii chars other than letters, digits, space, or control codes
terminal fragment ASCII_SYMBOLS: ('\u0021'..'\u002F')
	| ('\u003A'..'\u0040')
	| ('\u005B'..'\u0060')
	| ('\u007B'..'\u007E')
;

terminal fragment LATIN_ALPHABET: ('\u0041'..'\u005A')
	| ('\u0061'..'\u007A')
;
